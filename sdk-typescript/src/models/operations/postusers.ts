/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostUsersRequestBody = {
  name: string;
  age: number;
};

/** @internal */
export const PostUsersRequestBody$inboundSchema: z.ZodType<
  PostUsersRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  age: z.number(),
});

/** @internal */
export type PostUsersRequestBody$Outbound = {
  name: string;
  age: number;
};

/** @internal */
export const PostUsersRequestBody$outboundSchema: z.ZodType<
  PostUsersRequestBody$Outbound,
  z.ZodTypeDef,
  PostUsersRequestBody
> = z.object({
  name: z.string(),
  age: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostUsersRequestBody$ {
  /** @deprecated use `PostUsersRequestBody$inboundSchema` instead. */
  export const inboundSchema = PostUsersRequestBody$inboundSchema;
  /** @deprecated use `PostUsersRequestBody$outboundSchema` instead. */
  export const outboundSchema = PostUsersRequestBody$outboundSchema;
  /** @deprecated use `PostUsersRequestBody$Outbound` instead. */
  export type Outbound = PostUsersRequestBody$Outbound;
}

export function postUsersRequestBodyToJSON(
  postUsersRequestBody: PostUsersRequestBody,
): string {
  return JSON.stringify(
    PostUsersRequestBody$outboundSchema.parse(postUsersRequestBody),
  );
}

export function postUsersRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PostUsersRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostUsersRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostUsersRequestBody' from JSON`,
  );
}
